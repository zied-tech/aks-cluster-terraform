apiVersion: v1
kind: Service
metadata:
  name: mysql-svc  
  namespace: mypfe
  labels:
    app: mysql
    tier: database
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:     
    app: mysql
    tier: database
  clusterIP: None  
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-data
  namespace: mypfe
  labels:
    app: mysql
    tier: database
spec:
  accessModes:
    - ReadWriteOnce 
  storageClassName: default  
  resources:
    requests:
      storage: 1Gi   
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: mypfe
  labels:
    app: mysql
    tier: database
spec:
  replicas: 1
  serviceName: mysql-svc
  selector:
    matchLabels:
      app: mysql
      tier: database
  template:
    metadata:
      labels:
        app: mysql
        tier: database
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mysql
          image: mysql:5.7
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command: 
              - sh
              - -c
              - "mysqladmin -uroot -p$MYSQL_ROOT_PASSWORD ping"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command: 
              - sh
              - -c
              - 'mysql -uroot -p$MYSQL_ROOT_PASSWORD -e "SELECT 1"'
            initialDelaySeconds: 10
            periodSeconds: 2
            timeoutSeconds: 1
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
              ephemeral-storage: "1Gi"
            limits:
              cpu: "200m"
              memory: "512Mi"
              ephemeral-storage: "2Gi"
          args:
            - "--ignore-db-dir=lost+found"
          ports:
            - name: mysql
              containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD 
              valueFrom:
                secretKeyRef:
                  name: database-root-user 
                  key: password   
            - name: MYSQL_PASSWORD 
              valueFrom:
                secretKeyRef:
                  name: database-user
                  key: password
            - name: MYSQL_DATABASE 
              valueFrom:
                configMapKeyRef:
                  name: database-configuration
                  key: name
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysql-initdb
          configMap:
            name: mysql-initdb-config
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data